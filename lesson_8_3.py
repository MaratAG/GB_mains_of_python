"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class ItNotNumberError(Exception):
    """Класс-исключение Проверка значения на число."""

    def __init__(self):
        self.txt = 'Введеное значение не является числом. В список добавлено не будет!'


numbers = []
stop_word = 'stop'
print(f'Введите список целых чисел (для прекращения ввода введите {stop_word})')

while True:
    number = input('Введите целое число: ').strip()
    if number == stop_word:
        break
    try:
        if not number.isdigit():
            raise ItNotNumberError()
    except ItNotNumberError as err:
        print(err.txt)
    else:
        numbers.append(int(number))

print('Получившийся список чисел:')
print(*numbers)
